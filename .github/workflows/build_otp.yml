name: Build OTP release
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The OTP version'
        required: true

jobs:
  ensure_release:
    runs-on: ubuntu-16.04
    steps:
      - run: gh api -XHEAD repos/erlang/otp/releases/tags/OTP-${{ github.event.inputs.version }}
        name: Check erlang/otp
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - id: check-release
        name: Check wojtekmach/otp_releases 
        run: |
          if gh api -XHEAD repos/wojtekmach/otp_releases/releases/tags/OTP-${{ github.event.inputs.version }}; then 
            echo ::set-output name=exists::$(echo true)
          else
            echo ::set-output name=exists::$(echo false)
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          owner: wojtekmach
          repo: otp_releases
          commitish: main
          tag_name: OTP-${{ github.event.inputs.version }}
          prerelease: ${{ contains(github.event.inputs.version, 'rc') }}
        if: ${{ steps.check-release.outputs.exists == 'false' }}

  build:
    needs: [ensure_release]
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-16.04] #, macos-10.15]
    steps:
    - uses: actions/checkout@v2

    - name: Set release name
      id: release-name
      run: echo ::set-output name=name::$(echo otp-${{ github.event.inputs.version }}-$(uname -s)-$(uname -m) | tr '[:upper:]' '[:lower:]')

    - id: asset-exists
      name: Check if release asset exists
      run: |
        if gh api repos/wojtekmach/otp_releases/releases/$(gh api repos/wojtekmach/otp_releases/releases/tags/OTP-23.2.7 | jq .id)/assets | jq -r '.[].name' | grep ${{ steps.release-name.outputs.name }}; then
          echo ::set-output name=exists::$(echo true)
        else
          echo ::set-output name=exists::$(echo false)
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - run: TMPDIR=$PWD/tmp ./scripts/build_otp.sh ${{ github.event.inputs.version }}
    #   if: ${{ steps.asset-exists.outputs.exists == 'false' }}

    - run: mkdir -p tmp/beamup && cd tmp/beamup && mkdir -p ${{ steps.release-name.outputs.name }} && tar czf ${{ steps.release-name.outputs.name }}.tar.gz ${{ steps.release-name.outputs.name }}
      if: ${{ steps.asset-exists.outputs.exists == 'false' }}

    # - uses: actions/upload-artifact@v2
    #   with:
    #     name: ${{ steps.release-name.outputs.name }}
    #     path: tmp/beamup/${{ steps.release-name.outputs.name }}.tar.gz
    #     if: ${{ !env.ACT }}

    - run: echo '{"ref":"main","inputs":{"tag":"OTP-${{ github.event.inputs.version }}",workflow_url":"repos/wojtekmach/beamup2/actions/runs/'${GITHUB_RUN_ID}'"}}' > input.txt

    - run: gh api -XPOST repos/wojtekmach/otp_releases/actions/workflows/upload_assets.yml/dispatches --input input.txt
      env:
        GITHUB_TOKEN: ${{ secrets.ACTIONS_TOKEN }}

    # - id: upload-url
    #   name: Set upload url
    #   run: echo ::set-output name=url::$(gh api repos/wojtekmach/otp_releases/releases/tags/OTP-${{ github.event.inputs.version }} | jq -r .upload_url)
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   if: ${{ steps.asset-exists.outputs.exists == 'false' }}

    # - name: Upload Release Asset
    #   run: scripts/upload.sh wojtekmach/otp_releases OTP-${{ github.event.inputs.version }} tmp/beamup/${{ steps.release-name.outputs.name }}.tar.gz
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    # - name: Upload Release Asset
    #   uses: actions/upload-release-asset@v1
    #   env:
    #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #   with:
    #     upload_url: ${{ steps.upload-url.outputs.url }}
    #     asset_path: tmp/beamup/${{ steps.release-name.outputs.name }}.tar.gz
    #     asset_name: ${{ steps.release-name.outputs.name }}.tar.gz
    #     asset_content_type: application/gzip
    #   if: ${{ steps.asset-exists.outputs.exists == 'false' }}
